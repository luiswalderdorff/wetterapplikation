{"version":3,"sources":["components/WeatherComponent.js","components/WeatherWrapper.js","components/WeatherDetailedComponent.js","components/DailyComponent.js","components/WeatherDetailed.js","components/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["WeatherComponent","state","this","props","city","index","removeCity","name","className","onClick","to","pathname","src","weather","icon","alt","temperature","Component","WeatherWrapper","weatherArray","map","key","WeatherDetailedComponent","process","description","feelsLike","minTemp","maxTemp","pressure","humidity","DailyComponent","listItem","day","main","temp","WeatherDetailed","getCity","paramCity","location","fetch","then","response","json","setState","catch","err","console","log","list","unix_timestamp","dt","date","Date","hours","getHours","getDay","SearchBar","id","type","placeholder","document","getElementById","value","App","push","feels_like","temp_min","temp_max","localStorage","setItem","JSON","stringify","splice","getItem","weatherString","parse","forEach","input","addEventListener","event","keyCode","preventDefault","click","exact","path","render","onInputChange","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","URL","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5311eb8a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass WeatherComponent extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\tconst { city, index, removeCity } = this.props;\r\n\t/*Only renders this once a city name is fetched, to avoid errors*/\r\n\t\tif (city.name) {\r\n\t\t\t/*every item on the list has two sides, simple and detailed. Are switched by clicking */\r\n\t\t\treturn (\r\n\t\t\t<div className=\"dib w-90 ba b--black-10 flex flex-column items-center ma3 w-40-ns w-25-l shadow-5 weather-component\">\r\n\t\t\t\t<div className=\"flex justify-between w-100 pa3\">\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t\t<div className=\"dib\">{ city.name }</div>\r\n\t\t\t\t\t<div className=\"pointer b dib\" onClick={() => removeCity(index)}>×</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to={{\r\n\t\t\t\t\tpathname: `/${city.name}`,\r\n\t\t\t\t\tstate: {city: city}\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<img src={`http://openweathermap.org/img/wn/${city.weather.icon}@2x.png`} alt=\"A weather icon\" className=\"h4\" />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"pa3\">{city.temperature}°C</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>Hi</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default WeatherComponent;","// Could switch to full info with React Routes\r\n\r\nimport React from \"react\";\r\nimport WeatherComponent from \"./WeatherComponent\";\r\n\r\n// Hier später einen array an infos haben und damit mehrere Weathercomponents erstellen, je nach grösse des arrays\r\nconst WeatherWrapper = ( { weatherArray, removeCity } ) => {\r\n\treturn (\r\n\t\t<div className=\"w-90 flex flex-wrap justify-center-l justify-between-ns\">\r\n\t{/*displays every city from the weatherArray array*/}\r\n\t\t\t\t{weatherArray ? weatherArray.map(function(city, index) {\r\n\t\t\t\t\treturn <WeatherComponent city={ city } key={ index } index={ index } removeCity={ removeCity } />\r\n\t\t\t\t}) :\r\n\t\t\t\t<div></div>\r\n\t\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WeatherWrapper;","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass WeatherDetailedComponent extends Component {\r\n\trender() {\r\n\t\tconst { city } = this.props;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Link to={process.env.PUBLIC_URL + \"/\"}>\r\n\t\t\t\t\t\t<h1 className=\"dib ml3\">&larr;</h1>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"flex-wrap items-center pa3 justify-around ba ma3 weather-component detailed-view br3\">\r\n\t\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t\t<h1 className=\"city-name tc b pa1 dib ma0\">{ city.name }</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"flex flex-wrap justify-around\">\r\n\t\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t\t<img src={`http://openweathermap.org/img/wn/${city.weather.icon}@2x.png`} alt=\"A weather icon\" />\r\n\t\t\t\t\t\t\t<div className=\"flex justify-center flex-column\">\r\n\t\t\t\t\t\t\t\t<div className=\"tc pa2\">Temperatur: {city.temperature}°C</div>\r\n\t\t\t\t\t\t\t\t<div className=\"tc pa1\">{city.weather.description}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"flex flex-column justify-center\">\r\n\t\t\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t\t\t<div className=\"pa2\">Gefühlt: {city.feelsLike}°C</div>\r\n\t\t\t\t\t\t\t\t<div className=\"pa2\">Min: {city.minTemp}°C</div>\r\n\t\t\t\t\t\t\t\t<div className=\"pa2\">Max: {city.maxTemp}°C</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t\t\t<div className=\"pa2\">Luftdruck: {city.pressure} hPA</div>\r\n\t\t\t\t\t\t\t\t<div className=\"pa2\">Luftfeuchtigkeit: {city.humidity}%</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default WeatherDetailedComponent;","import React, { Component } from \"react\";\r\n\r\nclass DailyComponent extends Component {\r\n\trender() {\r\n\t\tconst { listItem, day } = this.props;\r\n\t\treturn(\r\n\t\t\t<div className=\"dib w-90 ba b--black-10 flex justify-around items-center ma3 w-40-ns w-25-l shadow-5 weather-component\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>{day}</div>\r\n\t\t\t\t\t<div>{listItem.main.temp}°C</div>\r\n\t\t\t\t\t<div>{listItem.weather[0].description}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src={`http://openweathermap.org/img/wn/${listItem.weather[0].icon}@2x.png`} alt=\"A weather icon\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DailyComponent;","import React, { Component } from \"react\";\r\nimport WeatherDetailedComponent from \"./WeatherDetailedComponent\";\r\nimport DailyComponent from \"./DailyComponent\"\r\n\r\nclass WeatherDetailed extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\t// Used to switch from simple to detailed side\r\n\tgetCity = () => {\r\n\t\tconst paramCity = this.props.location.state.city.name;\r\n\t\t\tfetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${paramCity}&units=metric&lang=de&APPID=761b91c920e9201fba7da16e3aa16206`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ weather: response });\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getCity();\r\n\t\tthis.city = this.props.location.state.city;\r\n\t}\r\n\r\n\trender() {\r\n\t/*Only renders this once a city name is fetched, to avoid errors*/\r\n\t\tif (this.state.weather) {\r\n\t\t\tconst {list} = this.state.weather;\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<WeatherDetailedComponent city={this.city} />\r\n\t\t\t\t\t<div className=\"flex flex-wrap justify-around\">\r\n\t\t\t\t\t\t{list ? list.map(function (listItem, index) {\r\n\t\t\t\t\t\t\tlet unix_timestamp = listItem.dt;\r\n\t\t\t\t\t\t\t// Create a new JavaScript Date object based on the timestamp\r\n\t\t\t\t\t\t\t// multiplied by 1000 so that the argument is in milliseconds, not seconds.\r\n\t\t\t\t\t\t\tlet day;\r\n\t\t\t\t\t\t\tconst date = new Date(unix_timestamp * 1000);\r\n\t\t\t\t\t\t\tconst hours = date.getHours();\r\n\t\t\t\t\t\t\t/*if (date.getDay() === 0) {\r\n\t\t\t\t\t\t\t\tday = \"Sonntag\";\r\n\t\t\t\t\t\t\t} else if (date.getDay() === 1) {\r\n\t\t\t\t\t\t\t\tday = \"Montag\";\r\n\t\t\t\t\t\t\t} else if (date.getDay() === 2) {\r\n\t\t\t\t\t\t\t\tday = \"Dienstag\";\r\n\t\t\t\t\t\t\t} else if (date.getDay() === 3) {\r\n\t\t\t\t\t\t\t\tday = \"Mittwoch\"\r\n\t\t\t\t\t\t\t} else if (date.getDay() === 4) {\r\n\t\t\t\t\t\t\t\tday = \"Donnerstag\";\r\n\t\t\t\t\t\t\t} else if (date.getDay() === 5) {\r\n\t\t\t\t\t\t\t\tday = \"Freitag\";\r\n\t\t\t\t\t\t\t} else if (date.getDay() === 6) {\r\n\t\t\t\t\t\t\t\tday = \"Samstag\"\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tday = \"Sonntag\"\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\tswitch (date.getDay()) {\r\n\t\t\t\t\t\t\t  case 0:\r\n\t\t\t\t\t\t\t    day = \"Sonntag\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  case 1:\r\n\t\t\t\t\t\t\t    day = \"Montag\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  case 2:\r\n\t\t\t\t\t\t\t     day = \"Dienstag\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  case 3:\r\n\t\t\t\t\t\t\t    day = \"Mittwoch\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  case 4:\r\n\t\t\t\t\t\t\t    day = \"Donnerstag\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  case 5:\r\n\t\t\t\t\t\t\t    day = \"Freitag\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  case 6:\r\n\t\t\t\t\t\t\t    day = \"Samstag\";\r\n\t\t\t\t\t\t\t    break;\r\n\t\t\t\t\t\t\t  default:\r\n\t\t\t\t\t\t\t  \tday = \"Sonntag\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (hours === 13 && index !== 0) {\r\n\t\t\t\t\t\t\t\treturn <DailyComponent listItem={ listItem } key={ index } day={ day } />\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}) :\r\n\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else if (this.city) {\r\n\t\t\treturn (\r\n\t\t\t\t<WeatherDetailedComponent city={this.city} />\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>Ein Fehler ist passiert</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default WeatherDetailed;","import React from \"react\";\r\n\r\nconst SearchBar = ({ getCity }) => {\r\n\t//clear input field after pressing button\r\n\tfunction clearFields() {\r\n\t     document.getElementById(\"myInput\").value = \"\";\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"flex flex-wrap justify-center items-center\">\r\n\t\t\t<input id=\"myInput\" type=\"text\" placeholder=\"Stadt hinzufügen\" className=\"b pa2 ba bg-transparent ma4\" />\r\n\t\t\t<button id=\"myBtn\" className=\"f6 link dim br-pill ba bw1 ph3 pv2 dib black\" onClick={() => {getCity(document.getElementById('myInput').value); clearFields()}}>OK</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBar;","import React, {Component} from 'react';\nimport WeatherWrapper from \"./components/WeatherWrapper\";\nimport WeatherDetailed from \"./components/WeatherDetailed\";\nimport SearchBar from \"./components/SearchBar\";\nimport {\n\tBrowserRouter,\n\tRoute,\n\tSwitch\n} from \"react-router-dom\";\n\nclass App extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tweatherArray: []\n\t\t}\n\t}\n\n\t// get city from openweather\n\tgetCity = (city) => {\n\t\tfetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=de&APPID=761b91c920e9201fba7da16e3aa16206`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\t// adds new city to array, updates state and localstorage\n\t\t\t\tlet weatherArray = this.state.weatherArray;\n\t\t\t\tweatherArray.push({name: response.name, temperature: response.main.temp, weather: response.weather[0], feelsLike: response.main.feels_like, minTemp: response.main.temp_min, maxTemp: response.main.temp_max, pressure: response.main.pressure, humidity: response.main.humidity});\n\t\t\t\tthis.setState({ weatherArray });\n\t\t\t\tlocalStorage.setItem(\"weatherArray\", JSON.stringify(weatherArray));\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\t// removes city from array, updates state and localstorage\n\tremoveCity = (index) => {\n\t\tlet weatherArray = this.state.weatherArray;\n\t\tweatherArray.splice(index, 1);\n\t\tthis.setState({ weatherArray });\n\t\tlocalStorage.setItem(\"weatherArray\", JSON.stringify(weatherArray));\n\t}\n\n\tcomponentDidMount() {\n\t\t// If localstorage from last session is available use that. Else, search for dresden\n\t\tif (localStorage.getItem(\"weatherArray\")) {\n\t\t\tconst weatherString = localStorage.getItem(\"weatherArray\");\n\t\t\tconst weatherArray = JSON.parse(weatherString);\n\t\t\tweatherArray.forEach((city,index) => {\n\t\t\t\tthis.getCity(city.name);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.getCity(\"dresden\");\n\t\t}\n\n\t\t// Press enter to start search\n\t\tvar input = document.getElementById(\"myInput\");\n\t\tif (input) {\n\t\t\tinput.addEventListener(\"keyup\", function(event) {\n\t\t\t  if (event.keyCode === 13) {\n\t\t\t    event.preventDefault();\n\t\t\t    document.getElementById(\"myBtn\").click();\n\t\t\t  }\n\t\t\t});\n\t\t}\n\t}\n\n  render() {\n  \tconst { weatherArray } = this.state;\n    return(\n    \t<BrowserRouter>\n\t      <div>\n\t        <Switch>\n\t\t        <Route exact path={process.env.PUBLIC_URL + \"/\"} render={(props) => (\n\t\t        \t<div className=\"App flex flex-column items-center avenir\">\n\t\t        \t\t<SearchBar getCity={ this.getCity } onInputChange={ this.onInputChange } />\n\t\t\t        \t<WeatherWrapper weatherArray={ weatherArray } removeCity={ this.removeCity } />\n\t\t        \t</div>\n\t\t        \t)} \n\t\t        />\n\t\t        <Route path={process.env.PUBLIC_URL + \"/:city\"} component={WeatherDetailed} />\n\t        </Switch>\n\t      </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}